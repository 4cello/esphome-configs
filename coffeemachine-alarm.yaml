substitutions:
  devicename:  coffeemachine-alarm
  max_distance: "0.2"
  cup_time: 20s
  no_cup_time: 30s
  warning_duration: 20s
  cooldown_time: 30s

esphome:
  platform: ESP8266
  board: d1_mini
  name: $devicename
  build_path: build/$devicename
  on_boot: 
    then:
      - light.turn_off: alarm_light

ota:

wifi:
  networks:
    - ssid: !secret ssid
      password: !secret wifi_password
      #bssid: F4:7B:09:4A:CC:48
      #hidden: True
    - ssid: jg-hotspot
      password: ""

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "$devicename"
    password: !secret ap_password
  
web_server:
  local: True

logger:
  level: DEBUG

interval:
  - interval: 1min
    then:
      - if:
          condition:
            - for:
                time: $no_cup_time
                condition:
                  sensor.in_range:
                    id: distance
                    above: $max_distance
          then:
            - script.execute: trigger_alarm
      - if:
          condition:
            - for:
                time: $cup_time
                condition:
                  sensor.in_range:
                    id: distance
                    below: $max_distance
          then:
            - script.execute: stop_alarm
            - switch.turn_off: waiting_for_reset



script:
  - id: trigger_alarm
    mode: single
    then:
      - if:
          condition:
            switch.is_off: waiting_for_reset
          then:
            - rtttl.play: siren:d=8,o=5,b=100:d,e,d,e,d,e,d,e
            - light.turn_on: alarm_light
            - delay: $warning_duration
            - script.execute: stop_alarm
  - id: stop_alarm
    mode: single
    then:
      - switch.turn_on: waiting_for_reset
      - light.turn_off: alarm_light
      - rtttl.stop

switch:
  - platform: template
    name: Cooling Down
    id: waiting_for_reset
    optimistic: True
  - platform: template
    name: Alarm Armed
    id: armed
    optimistic: True
    restore_mode: ALWAYS_ON

binary_sensor:
  - platform: template
    id: cup_present
    name: Coffee Cup Present
    on_release:
      - if:
          condition:
            switch.is_on: armed
          then:
            - logger.log: switch released

sensor:
  - platform: ultrasonic
    trigger_pin: D5
    echo_pin: D0
    name: Entfernung zur Kaffeetasse
    id: distance
    update_interval: 1s
    filters:
      - lambda: |-
          return (isnan(x)) ? 2.0 : x;
      - median:
          window_size: 10
          send_every: 3
          send_first_at: 3
    on_value: 
      then:
        - lambda: |-
            id(cup_present).publish_state(x < $max_distance);


output:
  - id: light_gpio
    platform: gpio
    pin: D6
  - id: builtin_led
    platform: gpio
    pin:
      number: D4
      inverted: True
  - id: buzzer_gpio
    platform: esp8266_pwm
    pin: D8

rtttl:
  output: buzzer_gpio

light:
  - id: alarm_light
    platform: binary
    name: Alarm Licht
    output: light_gpio # builtin_led # light_gpio
